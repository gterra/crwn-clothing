{"ast":null,"code":"var _jsxFileName = \"C:\\\\Guilherme\\\\Conhecimento\\\\Developer\\\\React\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport CollectionsOverview from \"./../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"./../collection/collection.component\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snapshot => {\n      convertCollectionsSnapshotToMap(snapshot);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispach => ({\n  clearItemFromCart: item => dispach(clearItemFromCart(item)),\n  addCartItem: item => dispach(addCartItem(item)),\n  removeCartItem: item => dispach(removeCartItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Guilherme/Conhecimento/Developer/React/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionsOverview","CollectionPage","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","render","match","props","path","mapDispatchToProps","dispach","clearItemFromCart","item","addCartItem","removeCartItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,mBAAP,MAAgC,wEAAhC;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,uBADqC,GACX,IADW;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC3CX,MAAAA,+BAA+B,CAACW,QAAD,CAA/B;AACD,KAFD;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAFtB;AAGE,MAAA,SAAS,EAAEb,mBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACE,IAAK,gBADtB;AAEE,MAAA,SAAS,EAAEZ,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAaD;;AA1BoC;;AA6BvC,MAAMa,kBAAkB,GAAIC,OAAD,KAAc;AACvCC,EAAAA,iBAAiB,EAAGC,IAAD,IAAUF,OAAO,CAACC,iBAAiB,CAACC,IAAD,CAAlB,CADG;AAEvCC,EAAAA,WAAW,EAAGD,IAAD,IAAUF,OAAO,CAACG,WAAW,CAACD,IAAD,CAAZ,CAFS;AAGvCE,EAAAA,cAAc,EAAGF,IAAD,IAAUF,OAAO,CAACI,cAAc,CAACF,IAAD,CAAf;AAHM,CAAd,CAA3B;;AAMA,eAAerB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCZ,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\r\n\r\nimport CollectionsOverview from \"./../../components/collections-overview/collections-overview.component\";\r\nimport CollectionPage from \"./../collection/collection.component\";\r\n\r\nclass ShopPage extends React.Component {\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n\r\n    collectionRef.onSnapshot(async (snapshot) => {\r\n      convertCollectionsSnapshotToMap(snapshot);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    return (\r\n      <div>\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          component={CollectionsOverview}\r\n        ></Route>\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          component={CollectionPage}\r\n        ></Route>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispach) => ({\r\n  clearItemFromCart: (item) => dispach(clearItemFromCart(item)),\r\n  addCartItem: (item) => dispach(addCartItem(item)),\r\n  removeCartItem: (item) => dispach(removeCartItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}