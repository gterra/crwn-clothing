{"ast":null,"code":"import { takeLatest, all, call, put } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, emailSignUpSuccess, emailSignUpFailure } from \"./user.actions\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n  const userSnapshot = yield userRef.get();\n  yield put(signInSuccess({\n    id: userSnapshot.id,\n    ...userSnapshot.data()\n  }));\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUpWithEmail({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(emailSignUpSuccess(user, {\n      displayName\n    }));\n  } catch (error) {\n    yield put(emailSignUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* checkUserSession() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onEmailSignUpStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_UP_START, signUpWithEmail);\n}\nexport function* onEmailSignUpSuccess() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, checkUserSession);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onEmailSignUpStart), call(onCheckUserSession), call(onSignOutStart), call(onEmailSignUpSuccess)]);\n}","map":{"version":3,"sources":["C:/Guilherme/Conhecimento/Developer/React/crwn-clothing/client/src/redux/user/user.sagas.js"],"names":["takeLatest","all","call","put","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","emailSignUpSuccess","emailSignUpFailure","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","signInWithGoogle","user","signInWithPopup","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signUpWithEmail","displayName","createUserWithEmailAndPassword","signInAfterSignUp","checkUserSession","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onEmailSignUpStart","EMAIL_SIGN_UP_START","onEmailSignUpSuccess","EMAIL_SIGN_UP_SUCCESS","onSignOutStart","SIGN_OUT_START","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, all, call, put } from \"redux-saga/effects\";\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser,\r\n} from \"../../firebase/firebase.utils\";\r\nimport {\r\n  signInSuccess,\r\n  signInFailure,\r\n  signOutSuccess,\r\n  signOutFailure,\r\n  emailSignUpSuccess,\r\n  emailSignUpFailure,\r\n} from \"./user.actions\";\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n  const userRef = yield call(\r\n    createUserProfileDocument,\r\n    userAuth,\r\n    additionalData\r\n  );\r\n  const userSnapshot = yield userRef.get();\r\n  yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signUpWithEmail({\r\n  payload: { displayName, email, password },\r\n}) {\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n    yield put(emailSignUpSuccess(user, { displayName }));\r\n  } catch (error) {\r\n    yield put(emailSignUpFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\r\n  yield getSnapshotFromUserAuth(user, additionalData);\r\n}\r\n\r\nexport function* checkUserSession() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  } catch (error) {\r\n    yield put(signOutFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onEmailSignUpStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_UP_START, signUpWithEmail);\r\n}\r\n\r\nexport function* onEmailSignUpSuccess() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_UP_SUCCESS, signInAfterSignUp);\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, checkUserSession);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(onEmailSignUpStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOutStart),\r\n    call(onEmailSignUpSuccess),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}