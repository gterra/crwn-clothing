{"ast":null,"code":"var _jsxFileName = \"C:\\\\Guilherme\\\\Conhecimento\\\\Developer\\\\React\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching } from \"./../../redux/shop/shop.selectors\";\nimport CollectionsOverview from \"./../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"./../collection/collection.component\";\nimport WithSpinner from \"./../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispach => ({\n  fetchCollectionsStartAsync: () => dispach(fetchCollectionsStartAsync())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Guilherme/Conhecimento/Developer/React/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","CollectionsOverview","CollectionPage","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","loading","state","path","mapDispatchToProps","dispach","mapStateToProps","isCollectionFetching"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AAEA,SAASC,0BAAT,QAA2C,mCAA3C;AAEA,OAAOC,mBAAP,MAAgC,wEAAhC;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,wDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMI,yBAAyB,GAAGF,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMI,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAiC,KAAKU,KAA5C;AACAV,IAAAA,0BAA0B;AAC3B;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGL,KAAD,iBACN,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAwDH,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGL,KAAD,iBACN,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAmDH,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AA1BoC;;AA6BvC,MAAMM,kBAAkB,GAAIC,OAAD,KAAc;AACvCjB,EAAAA,0BAA0B,EAAE,MAAMiB,OAAO,CAACjB,0BAA0B,EAA3B;AADF,CAAd,CAA3B;;AAIA,MAAMkB,eAAe,GAAGnB,wBAAwB,CAAC;AAC/CoB,EAAAA,oBAAoB,EAAElB;AADyB,CAAD,CAAhD;AAIA,eAAeH,OAAO,CAACoB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\r\n\r\nimport { selectIsCollectionFetching } from \"./../../redux/shop/shop.selectors\";\r\n\r\nimport CollectionsOverview from \"./../../components/collections-overview/collections-overview.component\";\r\nimport CollectionPage from \"./../collection/collection.component\";\r\nimport WithSpinner from \"./../../components/with-spinner/with-spinner.component\";\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchCollectionsStartAsync } = this.props;\r\n    fetchCollectionsStartAsync();\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    const { loading } = this.state;\r\n    return (\r\n      <div>\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={(props) => (\r\n            <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\r\n          )}\r\n        ></Route>\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={(props) => (\r\n            <CollectionPageWithSpinner isLoading={loading} {...props} />\r\n          )}\r\n        ></Route>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispach) => ({\r\n  fetchCollectionsStartAsync: () => dispach(fetchCollectionsStartAsync()),\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionFetching: selectIsCollectionFetching,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}