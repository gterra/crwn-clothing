{"ast":null,"code":"var _jsxFileName = \"C:\\\\Guilherme\\\\Conhecimento\\\\Developer\\\\React\\\\crwn-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport FormInput from \"./../form-input/form-input.component\";\nimport CustomButton from \"./../custom-button/custom-button.component\";\nimport { SignUpDiv, TitleH2, ErrorMessage } from \"./sign-up.styles\";\nimport { emailSignUpStart } from \"../../redux/user/user.actions\";\nimport { selectError } from \"./../../redux/user/user.selectors\";\n\nconst SignUp = ({\n  emailSignUpStart,\n  error\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match.\");\n      return;\n    }\n\n    emailSignUpStart(displayName, email, password);\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignUpDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TitleH2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"text\",\n    value: displayName,\n    required: true,\n    label: \"Name\",\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    label: \"Email\",\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    label: \"Password\",\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"confirmPassword\",\n    type: \"password\",\n    value: confirmPassword,\n    required: true,\n    label: \"Confirm password\",\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Sign up\")), error ? /*#__PURE__*/React.createElement(ErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }\n  }, error.message) : null);\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectError\n});\n\nconst mapDispatchToProps = dispatch => ({\n  emailSignUpStart: (displayName, email, password) => dispatch(emailSignUpStart({\n    displayName,\n    email,\n    password\n  }))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Guilherme/Conhecimento/Developer/React/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","createStructuredSelector","FormInput","CustomButton","SignUpDiv","TitleH2","ErrorMessage","emailSignUpStart","selectError","SignUp","error","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","e","preventDefault","alert","handleChange","value","name","target","message","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport FormInput from \"./../form-input/form-input.component\";\r\nimport CustomButton from \"./../custom-button/custom-button.component\";\r\n\r\nimport { SignUpDiv, TitleH2, ErrorMessage } from \"./sign-up.styles\";\r\n\r\nimport { emailSignUpStart } from \"../../redux/user/user.actions\";\r\nimport { selectError } from \"./../../redux/user/user.selectors\";\r\n\r\nconst SignUp = ({ emailSignUpStart, error }) => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    displayName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords don't match.\");\r\n      return;\r\n    }\r\n\r\n    emailSignUpStart(displayName, email, password);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setUserCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignUpDiv>\r\n      <TitleH2>I do not have an account</TitleH2>\r\n      <span>Sign up with your email and password</span>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          name=\"displayName\"\r\n          type=\"text\"\r\n          value={displayName}\r\n          required\r\n          label=\"Name\"\r\n          handleChange={handleChange}\r\n        />\r\n        <FormInput\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          label=\"Email\"\r\n          handleChange={handleChange}\r\n        />\r\n        <FormInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          required\r\n          label=\"Password\"\r\n          handleChange={handleChange}\r\n        />\r\n        <FormInput\r\n          name=\"confirmPassword\"\r\n          type=\"password\"\r\n          value={confirmPassword}\r\n          required\r\n          label=\"Confirm password\"\r\n          handleChange={handleChange}\r\n        />\r\n\r\n        <CustomButton type=\"submit\">Sign up</CustomButton>\r\n      </form>\r\n      {error ? <ErrorMessage>{error.message}</ErrorMessage> : null}\r\n    </SignUpDiv>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  error: selectError,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  emailSignUpStart: (displayName, email, password) =>\r\n    dispatch(emailSignUpStart({ displayName, email, password })),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}