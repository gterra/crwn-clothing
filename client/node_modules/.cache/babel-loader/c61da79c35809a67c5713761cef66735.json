{"ast":null,"code":"import { takeLatest, all, call, put } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutSuccess } from \"./user.actions\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  const userRef = yield call(createUserProfileDocument, userAuth);\n  const userSnapshot = yield userRef.get();\n  yield put(signInSuccess({\n    id: userSnapshot.id,\n    ...userSnapshot.data()\n  }));\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* checkUserSession() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_OUT_START, signOut);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, checkUserSession);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession)]);\n}","map":{"version":3,"sources":["C:/Guilherme/Conhecimento/Developer/React/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","all","call","put","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","signInWithGoogle","user","signInWithPopup","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","checkUserSession","signOut","signOutFailure","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignOutStart","EMAIL_SIGN_OUT_START","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, all, call, put } from \"redux-saga/effects\";\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser,\r\n} from \"../../firebase/firebase.utils\";\r\nimport { signInSuccess, signInFailure, signOutSuccess } from \"./user.actions\";\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n  const userRef = yield call(createUserProfileDocument, userAuth);\r\n  const userSnapshot = yield userRef.get();\r\n  yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* checkUserSession() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  } catch (error) {\r\n    yield put(signOutFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, checkUserSession);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(onCheckUserSession),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}