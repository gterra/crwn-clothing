{"ast":null,"code":"import { CartActionTypes } from \"./cart.types\";\nimport { addItemToCart, removeItem, removeItemFromCart } from \"./cart.utils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOOGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItem(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        cartItems: cartItems.filter(cartItem => state.cartItem.id !== action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Guilherme/Conhecimento/Developer/React/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItem","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOOGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,kBAApC,QAA8D,cAA9D;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,eAAe,CAACW,kBAArB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFV,OAAP;;AAIF,SAAKL,eAAe,CAACY,QAArB;AACE,aAAO,EACL,GAAGJ,KADE;AAELF,QAAAA,SAAS,EAAEL,aAAa,CAACO,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFnB,OAAP;;AAIF,SAAKb,eAAe,CAACc,WAArB;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,SAAS,EAAEJ,UAAU,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFhB,OAAP;;AAIF,SAAKb,eAAe,CAACe,oBAArB;AACE,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,SAAS,EAAEA,SAAS,CAACU,MAAV,CACRC,QAAD,IAAcT,KAAK,CAACS,QAAN,CAAeC,EAAf,KAAsBT,MAAM,CAACI,OAAP,CAAeK,EAD1C;AAFN,OAAP;;AAMF;AACE,aAAOV,KAAP;AAxBJ;AA0BD,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["import { CartActionTypes } from \"./cart.types\";\r\nimport { addItemToCart, removeItem, removeItemFromCart } from \"./cart.utils\";\r\n\r\nconst INITIAL_STATE = {\r\n  hidden: true,\r\n  cartItems: [],\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CartActionTypes.TOOGLE_CART_HIDDEN:\r\n      return {\r\n        ...state,\r\n        hidden: !state.hidden,\r\n      };\r\n    case CartActionTypes.ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: addItemToCart(state.cartItems, action.payload),\r\n      };\r\n    case CartActionTypes.REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: removeItem(state.cartItems, action.payload),\r\n      };\r\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cartItems: cartItems.filter(\r\n          (cartItem) => state.cartItem.id !== action.payload.id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}